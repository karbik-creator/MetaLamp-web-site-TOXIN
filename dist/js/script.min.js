const getTemplateSelect=(t=[],e)=>{const n=e??"Выберите значение",s=t.map(t=>`\n    <div class="select__drop__down__item" data-id = ${t.id}>\n    <div class="select__item__text">${t.value}</div>\n    <div class="select__item__content__right">\n      <button class="select__item__btn" type="button" data-type='btnMinus'>-</button>\n      <div class="select__item__number" data-type='count'>${t.count}</div>\n      <button class="select__item__btn active" type="button" data-type='btnPlus'>+</button>\n    </div>\n    </div>\n    `);return`<div class="select__backdrop" data-type="backdrop"></div>\n            <div class="select__input" data-type="input">${n}</div>\n            <div class="select__drop__down">\n              ${s[0]}\n              ${s[1]}\n              ${s[2]}\n              <div class="select__drop__down__btn">\n                <button type="button" data-type="cleandrop">очистить</button>\n                <button class="active" type="button" data-type="backdrop">применить</button>\n              </div>\n            </div>`};class Select{constructor(t,e){this.element=document.querySelector(t),this.options=e,this.selectId=null,this.render(),this.setup()}render(){const{data:t,placeholder:e}=this.options;this.element.classList.add("select__wrapper"),this.element.insertAdjacentHTML("afterbegin",getTemplateSelect(t,e))}setup(){this.clickHandler=this.clickHandler.bind(this),this.element.addEventListener("click",this.clickHandler),this.value=this.element.querySelector('[data-type="input"]'),this.count=this.element.querySelectorAll('[data-type="count"]'),this.btnClean=this.element.querySelector('[data-type="cleandrop"]')}clickHandler(t){const{type:e}=t.target.dataset;if("input"===e&&this.toogle(),"btnPlus"===e||"btnMinus"===e){const n=t.target.parentElement.parentElement.dataset.id;this.select(n,e)}"backdrop"===e&&this.toogle(),"cleandrop"===e&&this.cleanCount()}toogle(){this.element.classList.toggle("open")}destroy(){this.element.removeEventListener("click",this.clickHandler)}select(t,e){this.selectId=t,this.count[this.selectId-1].textContent="btnPlus"===e?this.plus():this.minus(),this.currentStyleBtn(t),this.currentInput()}plus(){return++this.current().count}minus(){return this.current().count<=0?0:--this.current().count}current(){return this.options.data.find(t=>t.id==this.selectId)}currentInput(){let t=0,e=0,n="",s="";this.options.data.map(n=>{"Младенцы"===n.value?e+=n.count:t+=n.count}),n=this.declOfNum(t,["гость","гостя","гостей"]),s=this.declOfNum(e,["младенец","младенца","младенцев"]),0===t&&0===e&&(n=this.options.placeholder??"Выберите значение"),this.value.textContent=0!==t&&0!==e?n+", "+s:n+s,e+t>0?this.isActiveBtnClean()||this.btnClean.classList.add("active"):this.isActiveBtnClean()&&this.btnClean.classList.remove("active")}declOfNum(t,e){if(0==t)return"";let n=(t=Math.abs(t)%1e3)%10;return t>10&&t<20?t+" "+e[2]:n>1&&n<5?t+" "+e[1]:1==n?t+" "+e[0]:t+" "+e[2]}currentStyleBtn(t,e=this.options.data){if(void 0===t)e.map(t=>{let e=this.element.querySelector(`[data-id="${t.id}"] > div > button[data-type="btnMinus"]`),n=this.element.querySelector(`[data-id="${t.id}"] > div > button[data-type="btnPlus"]`);this.current().count>0?e.classList.add("active"):e.classList.remove("active"),100===this.current().count?n.classList.remove("active"):n.classList.add("active")});else{let e=this.element.querySelector(`[data-id="${t}"] > div > button[data-type="btnMinus"]`);this.element.querySelector(`[data-id="${t}"] > div > button[data-type="btnPlus"]`);this.current().count>0?e.classList.add("active"):e.classList.remove("active")}}isActiveBtnClean(){return this.btnClean.classList.contains("active")}cleanCount(){this.options.data.map(t=>t.count=0);for(let t of this.count)t.textContent=0;this.currentStyleBtn(),this.currentInput()}}const select=new Select("#select-in-form",{placeholder:"Сколько гостей",data:[{id:1,value:"Взрослые",count:0},{id:2,value:"Дети",count:0},{id:3,value:"Младенцы",count:0}]});class Datepicker{constructor(t,e){this.element=document.querySelector(t),this.options=e,this.render(),this.setup()}render(){const t=this.options;this.element.classList.add("select__wrapper"),this.element.insertAdjacentHTML("afterbegin",getTemplateSelect(data,t))}}