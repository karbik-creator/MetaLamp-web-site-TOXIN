const getTemplateSelect=(t=[],e)=>{const n=e??"Выберите значение",s=t.map(t=>`\n    <div class="select__drop__down__item" data-id = ${t.id}>\n    <div class="select__item__text">${t.value}</div>\n    <div class="select__item__content__right">\n      <button class="select__item__btn" type="button" data-type='btnMinus'>-</button>\n      <div class="select__item__number" data-type='count'>${t.count}</div>\n      <button class="select__item__btn active" type="button" data-type='btnPlus'>+</button>\n    </div>\n    </div>\n    `);return`<div class="select__backdrop" data-type="backdrop"></div>\n            <div class="select__input" data-type="input">${n}</div>\n            <div class="select__drop__down">\n              ${s[0]}\n              ${s[1]}\n              ${s[2]}\n              <div class="select__drop__down__btn">\n                <button type="button" data-type="cleandrop">очистить</button>\n                <button class="active" type="button" data-type="backdrop">применить</button>\n              </div>\n            </div>`};class Select{constructor(t,e){this.element=document.querySelector(t),this.options=e,this.selectId=null,this.render(),this.setup()}render(){const{data:t,placeholder:e}=this.options;this.element.classList.add("select__wrapper"),this.element.insertAdjacentHTML("afterbegin",getTemplateSelect(t,e))}setup(){this.clickHandler=this.clickHandler.bind(this),this.element.addEventListener("click",this.clickHandler),this.value=this.element.querySelector('[data-type="input"]'),this.count=this.element.querySelectorAll('[data-type="count"]'),this.btnClean=this.element.querySelector('[data-type="cleandrop"]')}clickHandler(t){const{type:e}=t.target.dataset;if("input"===e&&this.toogle(),"btnPlus"===e||"btnMinus"===e){const n=t.target.parentElement.parentElement.dataset.id;this.select(n,e)}"backdrop"===e&&this.toogle(),"cleandrop"===e&&this.cleanCount()}toogle(){this.element.classList.toggle("open")}destroy(){this.element.removeEventListener("click",this.clickHandler)}select(t,e){this.selectId=t,this.count[this.selectId-1].textContent="btnPlus"===e?this.plus():this.minus(),this.currentStyleBtn(t),this.currentInput()}plus(){return++this.current().count}minus(){return this.current().count<=0?0:--this.current().count}current(){return this.options.data.find(t=>t.id==this.selectId)}currentInput(){let t=0,e=0,n="",s="";this.options.data.map(n=>{"Младенцы"===n.value?e+=n.count:t+=n.count}),n=this.declOfNum(t,["гость","гостя","гостей"]),s=this.declOfNum(e,["младенец","младенца","младенцев"]),0===t&&0===e&&(n=this.options.placeholder??"Выберите значение"),this.value.textContent=0!==t&&0!==e?n+", "+s:n+s,e+t>0?this.isActiveBtnClean()||this.btnClean.classList.add("active"):this.isActiveBtnClean()&&this.btnClean.classList.remove("active")}declOfNum(t,e){if(0==t)return"";let n=(t=Math.abs(t)%1e3)%10;return t>10&&t<20?t+" "+e[2]:n>1&&n<5?t+" "+e[1]:1==n?t+" "+e[0]:t+" "+e[2]}currentStyleBtn(t,e=this.options.data){if(void 0===t)e.map(t=>{let e=this.element.querySelector(`[data-id="${t.id}"] > div > button[data-type="btnMinus"]`),n=this.element.querySelector(`[data-id="${t.id}"] > div > button[data-type="btnPlus"]`);this.current().count>0?e.classList.add("active"):e.classList.remove("active"),100===this.current().count?n.classList.remove("active"):n.classList.add("active")});else{let e=this.element.querySelector(`[data-id="${t}"] > div > button[data-type="btnMinus"]`);this.element.querySelector(`[data-id="${t}"] > div > button[data-type="btnPlus"]`);this.current().count>0?e.classList.add("active"):e.classList.remove("active")}}isActiveBtnClean(){return this.btnClean.classList.contains("active")}cleanCount(){this.options.data.map(t=>t.count=0);for(let t of this.count)t.textContent=0;this.currentStyleBtn(),this.currentInput()}}const select=new Select("#select-in-form",{placeholder:"Сколько гостей",data:[{id:1,value:"Взрослые",count:0},{id:2,value:"Дети",count:0},{id:3,value:"Младенцы",count:0}]}),getTemplateDatepicker=(t,e,n,s)=>`<div class="datepicker__backdrop" data-type="backdrop"></div>\n  <div class="datepicker__item">\n  <h3>прибытие</h3>\n  <div class="datepicker__item__wrapper">\n    <div class="datepicker__item__input" data-type="input-start-date">${t}</div>\n  </div>\n</div>\n<div class="datepicker__item">\n  <h3>выезд</h3>\n  <div class="datepicker__item__wrapper">\n    <div class="datepicker__item__input" data-type="input-end-date">${t}</div>\n  </div>\n</div>\n<div class="datepicker__item__dropdown">\n  <div class="datepicker__item__dropdown__inner">\n    <div class="content__top">\n      <button class="arrow prev-month"  type="button">\n        <span class="material-icons" id="arrow-prev-month" data-type="btn-prev-month"> arrow_forward </span>\n      </button>\n      <div class="month-and-year">${e+" "+n}</div>\n      <button class="arrow next-month"  type="button">\n      <span class="material-icons" id="arrow-next-month" data-type="btn-next-month"> arrow_forward </span>\n      </button>\n    </div>\n    <div class="content__center">\n      <div class="days-of-week">\n        ${s.map(t=>`<div class="day-of-week">${t}</div>`).join("")}\n      </div>\n      <div class="days">\n      </div>\n    </div>\n    <div class="content__footer">\n      <div class="drop__down__btn">\n        <button type="button" data-type="cleandrop">очистить</button>\n        <button class="active" type="button" data-type="backdrop">\n          применить\n        </button>\n      </div>\n    </div>\n  </div>\n</div>`;class Datepicker{constructor(t,e){this.element=document.querySelector(t),this.options=e,this.date=new Date,this.month=this.date.getMonth(),this.year=this.date.getFullYear(),this.dayOfWeek=this.date.getDay(),this.months=["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],this.daysOfWeek=["пн","вт","ср","чт","пт","сб","вс"],this.render(),this.setup()}render(){const t=this.options;this.element.insertAdjacentHTML("afterbegin",getTemplateDatepicker(t,this.months[this.month],this.year,this.daysOfWeek)),this.renderDays()}renderDays(){const t=new Date(this.year,this.month).toLocaleDateString("ru",{weekday:"short"}),e=this.daysOfWeek.indexOf(t.split(", ")[0]);let n=this.element.querySelector(".days"),s=document.createElement("div");s.classList.add("days__list"),s.style,n.append(s);let i=new Date(this.year,this.month+1,0).getDate(),a=new Date(this.year,this.month,0).getDate();for(let t=1;t<=35;t++){if(t<=e)for(let n=a;n>a-e;n--)s.insertAdjacentHTML("afterbegin",`<div class="day prev-next-day" data-type="day" data-value='${new Date(this.year,this.month-1,n,0,0,0,0).getTime()}'>${n}</div>`),t++;if(t<=i+e&&t>e&&s.insertAdjacentHTML("beforeend",`<div class="day" data-type="day" data-value='${new Date(this.year,this.month,t-e,0,0,0,0).getTime()}'>${t-e}</div>`),t>=i+e)for(let n=1;n<=35-i-e;n++)s.insertAdjacentHTML("beforeend",`<div class="day prev-next-day" data-type="day" data-value='${new Date(this.year,this.month+1,n,0,0,0,0).getTime()}'>${n}</div>`),t++}}setup(){this.clickHandler=this.clickHandler.bind(this),this.element.addEventListener("click",this.clickHandler),this.daysContainer=this.element.querySelector(".days__list"),this.btnClean=this.element.querySelector('[data-type="cleandrop"]'),this.inputStartDate=this.element.querySelector('[data-type="input-start-date"]'),this.inputEndDate=this.element.querySelector('[data-type="input-end-date"]'),this.startPeriod,this.endPeriod}clickHandler(t){const{type:e}=t.target.dataset;"input-start-date"!==e&&"input-end-date"!==e||this.toggleDropdown(),"btn-next-month"===e&&this.nextMonth(),"btn-prev-month"===e&&this.prevMonth(),"day"===e&&this.activeDay(t),"backdrop"===e&&(this.toggleDropdown(),this.fillInput(),console,log(this.startPeriod)),"cleandrop"===e&&this.cleanDrop()}toggleDropdown(){this.element.classList.toggle("open")}nextMonth(){this.month<11?this.month++:(this.month=0,this.year++),this.element.querySelector(".month-and-year").textContent=this.months[this.month]+" "+this.year,console.log(this.daysContainer.style),this.renderDays()}prevMonth(){this.month>0?this.month--:(this.month=11,this.year--),this.element.querySelector(".month-and-year").textContent=this.months[this.month]+" "+this.year,this.renderDays()}activeDay(t){this.reviewCountActiveDays(),t.target.classList.add("active"),this.btnClean.classList.add("active"),this.colorPeriod()}reviewCountActiveDays(){let t=this.element.querySelectorAll(".day.active");if(t.length>1){for(let e of t)e.classList.remove("active","start","end");for(let t=this.startPeriod;t<this.endPeriod;t+=864e5)this.element.querySelector(`[data-value="${t}"]`).classList.remove("streak")}}colorPeriod(){let t=this.element.querySelectorAll(".day.active");if(this.startPeriod=new Date(parseInt(t[0].dataset.value)).getTime(),2==t.length){this.endPeriod=new Date(parseInt(t[1].dataset.value)).getTime(),t[0].classList.add("start"),t[1].classList.add("end");for(let t=this.startPeriod+864e5;t<this.endPeriod;t+=864e5)this.element.querySelector(`[data-value="${t}"]`).classList.add("streak")}}fillInput(){this.inputStartDate.textContent=new Date(this.startPeriod+864e5).toISOString().replace(/^([^T]+)T(.+)$/,"$1").replace(/^(\d+)-(\d+)-(\d+)$/,"$3.$2.$1"),this.inputEndDate.textContent=new Date(this.endPeriod+864e5).toISOString().replace(/^([^T]+)T(.+)$/,"$1").replace(/^(\d+)-(\d+)-(\d+)$/,"$3.$2.$1")}isActiveDay(){return this.element.querySelectorAll(".day.active").length}cleanDrop(){for(let t of this.element.querySelectorAll(".day"))t.classList.remove("active","start","end","streak");this.btnClean.classList.remove("active"),this.inputStartDate.textContent=this.options,this.inputEndDate.textContent=this.options}}const datePicker=new Datepicker(".datepicker","ДД.ММ.ГГГГ");